//! DO NOT EDIT!
//! Generated by protoc-gen-rust, part of the protrust crate.
//!
//! Source: google/protobuf/api.proto

static FILE_ONCE: ::std::sync::Once = ::std::sync::Once::new();
static mut FILE_POOL: ::std::option::Option<crate::reflect::DescriptorPool<'static>> = ::std::option::Option::None;
static mut FILE_PROTO: ::std::option::Option<[crate::descriptor::FileDescriptorProto; 1]> = ::std::option::Option::None;
static mut FILE_DESCRIPTOR: ::std::option::Option<&'static crate::reflect::FileDescriptor> = ::std::option::Option::None;
static mut FILE_DEPS: ::std::option::Option<[&'static crate::reflect::DescriptorPool<'static>; 2]> = ::std::option::Option::None;

fn file_once_init() {
    unsafe {
        FILE_PROTO = ::std::option::Option::Some([crate::LiteMessage::read_new(&mut [
            10, 25, 103, 111, 111, 103, 108, 101, 47, 112, 114, 111, 116, 111, 98, 117, 102, 47, 97, 112, 
            105, 46, 112, 114, 111, 116, 111, 18, 15, 103, 111, 111, 103, 108, 101, 46, 112, 114, 111, 116, 
            111, 98, 117, 102, 26, 36, 103, 111, 111, 103, 108, 101, 47, 112, 114, 111, 116, 111, 98, 117, 
            102, 47, 115, 111, 117, 114, 99, 101, 95, 99, 111, 110, 116, 101, 120, 116, 46, 112, 114, 111, 
            116, 111, 26, 26, 103, 111, 111, 103, 108, 101, 47, 112, 114, 111, 116, 111, 98, 117, 102, 47, 
            116, 121, 112, 101, 46, 112, 114, 111, 116, 111, 34, 193, 2, 10, 3, 65, 112, 105, 18, 18, 
            10, 4, 110, 97, 109, 101, 24, 1, 32, 1, 40, 9, 82, 4, 110, 97, 109, 101, 18, 49, 
            10, 7, 109, 101, 116, 104, 111, 100, 115, 24, 2, 32, 3, 40, 11, 50, 23, 46, 103, 111, 
            111, 103, 108, 101, 46, 112, 114, 111, 116, 111, 98, 117, 102, 46, 77, 101, 116, 104, 111, 100, 
            82, 7, 109, 101, 116, 104, 111, 100, 115, 18, 49, 10, 7, 111, 112, 116, 105, 111, 110, 115, 
            24, 3, 32, 3, 40, 11, 50, 23, 46, 103, 111, 111, 103, 108, 101, 46, 112, 114, 111, 116, 
            111, 98, 117, 102, 46, 79, 112, 116, 105, 111, 110, 82, 7, 111, 112, 116, 105, 111, 110, 115, 
            18, 24, 10, 7, 118, 101, 114, 115, 105, 111, 110, 24, 4, 32, 1, 40, 9, 82, 7, 118, 
            101, 114, 115, 105, 111, 110, 18, 69, 10, 14, 115, 111, 117, 114, 99, 101, 95, 99, 111, 110, 
            116, 101, 120, 116, 24, 5, 32, 1, 40, 11, 50, 30, 46, 103, 111, 111, 103, 108, 101, 46, 
            112, 114, 111, 116, 111, 98, 117, 102, 46, 83, 111, 117, 114, 99, 101, 67, 111, 110, 116, 101, 
            120, 116, 82, 13, 115, 111, 117, 114, 99, 101, 67, 111, 110, 116, 101, 120, 116, 18, 46, 10, 
            6, 109, 105, 120, 105, 110, 115, 24, 6, 32, 3, 40, 11, 50, 22, 46, 103, 111, 111, 103, 
            108, 101, 46, 112, 114, 111, 116, 111, 98, 117, 102, 46, 77, 105, 120, 105, 110, 82, 6, 109, 
            105, 120, 105, 110, 115, 18, 47, 10, 6, 115, 121, 110, 116, 97, 120, 24, 7, 32, 1, 40, 
            14, 50, 23, 46, 103, 111, 111, 103, 108, 101, 46, 112, 114, 111, 116, 111, 98, 117, 102, 46, 
            83, 121, 110, 116, 97, 120, 82, 6, 115, 121, 110, 116, 97, 120, 34, 178, 2, 10, 6, 77, 
            101, 116, 104, 111, 100, 18, 18, 10, 4, 110, 97, 109, 101, 24, 1, 32, 1, 40, 9, 82, 
            4, 110, 97, 109, 101, 18, 40, 10, 16, 114, 101, 113, 117, 101, 115, 116, 95, 116, 121, 112, 
            101, 95, 117, 114, 108, 24, 2, 32, 1, 40, 9, 82, 14, 114, 101, 113, 117, 101, 115, 116, 
            84, 121, 112, 101, 85, 114, 108, 18, 43, 10, 17, 114, 101, 113, 117, 101, 115, 116, 95, 115, 
            116, 114, 101, 97, 109, 105, 110, 103, 24, 3, 32, 1, 40, 8, 82, 16, 114, 101, 113, 117, 
            101, 115, 116, 83, 116, 114, 101, 97, 109, 105, 110, 103, 18, 42, 10, 17, 114, 101, 115, 112, 
            111, 110, 115, 101, 95, 116, 121, 112, 101, 95, 117, 114, 108, 24, 4, 32, 1, 40, 9, 82, 
            15, 114, 101, 115, 112, 111, 110, 115, 101, 84, 121, 112, 101, 85, 114, 108, 18, 45, 10, 18, 
            114, 101, 115, 112, 111, 110, 115, 101, 95, 115, 116, 114, 101, 97, 109, 105, 110, 103, 24, 5, 
            32, 1, 40, 8, 82, 17, 114, 101, 115, 112, 111, 110, 115, 101, 83, 116, 114, 101, 97, 109, 
            105, 110, 103, 18, 49, 10, 7, 111, 112, 116, 105, 111, 110, 115, 24, 6, 32, 3, 40, 11, 
            50, 23, 46, 103, 111, 111, 103, 108, 101, 46, 112, 114, 111, 116, 111, 98, 117, 102, 46, 79, 
            112, 116, 105, 111, 110, 82, 7, 111, 112, 116, 105, 111, 110, 115, 18, 47, 10, 6, 115, 121, 
            110, 116, 97, 120, 24, 7, 32, 1, 40, 14, 50, 23, 46, 103, 111, 111, 103, 108, 101, 46, 
            112, 114, 111, 116, 111, 98, 117, 102, 46, 83, 121, 110, 116, 97, 120, 82, 6, 115, 121, 110, 
            116, 97, 120, 34, 47, 10, 5, 77, 105, 120, 105, 110, 18, 18, 10, 4, 110, 97, 109, 101, 
            24, 1, 32, 1, 40, 9, 82, 4, 110, 97, 109, 101, 18, 18, 10, 4, 114, 111, 111, 116, 
            24, 2, 32, 1, 40, 9, 82, 4, 114, 111, 111, 116, 66, 117, 10, 19, 99, 111, 109, 46, 
            103, 111, 111, 103, 108, 101, 46, 112, 114, 111, 116, 111, 98, 117, 102, 66, 8, 65, 112, 105, 
            80, 114, 111, 116, 111, 80, 1, 90, 43, 103, 111, 111, 103, 108, 101, 46, 103, 111, 108, 97, 
            110, 103, 46, 111, 114, 103, 47, 103, 101, 110, 112, 114, 111, 116, 111, 47, 112, 114, 111, 116, 
            111, 98, 117, 102, 47, 97, 112, 105, 59, 97, 112, 105, 162, 2, 3, 71, 80, 66, 170, 2, 
            30, 71, 111, 111, 103, 108, 101, 46, 80, 114, 111, 116, 111, 98, 117, 102, 46, 87, 101, 108, 
            108, 75, 110, 111, 119, 110, 84, 121, 112, 101, 115, 74, 184, 61, 10, 7, 18, 5, 30, 0, 
            209, 1, 1, 10, 204, 12, 10, 1, 12, 18, 3, 30, 0, 18, 50, 193, 12, 32, 80, 114, 
            111, 116, 111, 99, 111, 108, 32, 66, 117, 102, 102, 101, 114, 115, 32, 45, 32, 71, 111, 111, 
            103, 108, 101, 39, 115, 32, 100, 97, 116, 97, 32, 105, 110, 116, 101, 114, 99, 104, 97, 110, 
            103, 101, 32, 102, 111, 114, 109, 97, 116, 10, 32, 67, 111, 112, 121, 114, 105, 103, 104, 116, 
            32, 50, 48, 48, 56, 32, 71, 111, 111, 103, 108, 101, 32, 73, 110, 99, 46, 32, 32, 65, 
            108, 108, 32, 114, 105, 103, 104, 116, 115, 32, 114, 101, 115, 101, 114, 118, 101, 100, 46, 10, 
            32, 104, 116, 116, 112, 115, 58, 47, 47, 100, 101, 118, 101, 108, 111, 112, 101, 114, 115, 46, 
            103, 111, 111, 103, 108, 101, 46, 99, 111, 109, 47, 112, 114, 111, 116, 111, 99, 111, 108, 45, 
            98, 117, 102, 102, 101, 114, 115, 47, 10, 10, 32, 82, 101, 100, 105, 115, 116, 114, 105, 98, 
            117, 116, 105, 111, 110, 32, 97, 110, 100, 32, 117, 115, 101, 32, 105, 110, 32, 115, 111, 117, 
            114, 99, 101, 32, 97, 110, 100, 32, 98, 105, 110, 97, 114, 121, 32, 102, 111, 114, 109, 115, 
            44, 32, 119, 105, 116, 104, 32, 111, 114, 32, 119, 105, 116, 104, 111, 117, 116, 10, 32, 109, 
            111, 100, 105, 102, 105, 99, 97, 116, 105, 111, 110, 44, 32, 97, 114, 101, 32, 112, 101, 114, 
            109, 105, 116, 116, 101, 100, 32, 112, 114, 111, 118, 105, 100, 101, 100, 32, 116, 104, 97, 116, 
            32, 116, 104, 101, 32, 102, 111, 108, 108, 111, 119, 105, 110, 103, 32, 99, 111, 110, 100, 105, 
            116, 105, 111, 110, 115, 32, 97, 114, 101, 10, 32, 109, 101, 116, 58, 10, 10, 32, 32, 32, 
            32, 32, 42, 32, 82, 101, 100, 105, 115, 116, 114, 105, 98, 117, 116, 105, 111, 110, 115, 32, 
            111, 102, 32, 115, 111, 117, 114, 99, 101, 32, 99, 111, 100, 101, 32, 109, 117, 115, 116, 32, 
            114, 101, 116, 97, 105, 110, 32, 116, 104, 101, 32, 97, 98, 111, 118, 101, 32, 99, 111, 112, 
            121, 114, 105, 103, 104, 116, 10, 32, 110, 111, 116, 105, 99, 101, 44, 32, 116, 104, 105, 115, 
            32, 108, 105, 115, 116, 32, 111, 102, 32, 99, 111, 110, 100, 105, 116, 105, 111, 110, 115, 32, 
            97, 110, 100, 32, 116, 104, 101, 32, 102, 111, 108, 108, 111, 119, 105, 110, 103, 32, 100, 105, 
            115, 99, 108, 97, 105, 109, 101, 114, 46, 10, 32, 32, 32, 32, 32, 42, 32, 82, 101, 100, 
            105, 115, 116, 114, 105, 98, 117, 116, 105, 111, 110, 115, 32, 105, 110, 32, 98, 105, 110, 97, 
            114, 121, 32, 102, 111, 114, 109, 32, 109, 117, 115, 116, 32, 114, 101, 112, 114, 111, 100, 117, 
            99, 101, 32, 116, 104, 101, 32, 97, 98, 111, 118, 101, 10, 32, 99, 111, 112, 121, 114, 105, 
            103, 104, 116, 32, 110, 111, 116, 105, 99, 101, 44, 32, 116, 104, 105, 115, 32, 108, 105, 115, 
            116, 32, 111, 102, 32, 99, 111, 110, 100, 105, 116, 105, 111, 110, 115, 32, 97, 110, 100, 32, 
            116, 104, 101, 32, 102, 111, 108, 108, 111, 119, 105, 110, 103, 32, 100, 105, 115, 99, 108, 97, 
            105, 109, 101, 114, 10, 32, 105, 110, 32, 116, 104, 101, 32, 100, 111, 99, 117, 109, 101, 110, 
            116, 97, 116, 105, 111, 110, 32, 97, 110, 100, 47, 111, 114, 32, 111, 116, 104, 101, 114, 32, 
            109, 97, 116, 101, 114, 105, 97, 108, 115, 32, 112, 114, 111, 118, 105, 100, 101, 100, 32, 119, 
            105, 116, 104, 32, 116, 104, 101, 10, 32, 100, 105, 115, 116, 114, 105, 98, 117, 116, 105, 111, 
            110, 46, 10, 32, 32, 32, 32, 32, 42, 32, 78, 101, 105, 116, 104, 101, 114, 32, 116, 104, 
            101, 32, 110, 97, 109, 101, 32, 111, 102, 32, 71, 111, 111, 103, 108, 101, 32, 73, 110, 99, 
            46, 32, 110, 111, 114, 32, 116, 104, 101, 32, 110, 97, 109, 101, 115, 32, 111, 102, 32, 105, 
            116, 115, 10, 32, 99, 111, 110, 116, 114, 105, 98, 117, 116, 111, 114, 115, 32, 109, 97, 121, 
            32, 98, 101, 32, 117, 115, 101, 100, 32, 116, 111, 32, 101, 110, 100, 111, 114, 115, 101, 32, 
            111, 114, 32, 112, 114, 111, 109, 111, 116, 101, 32, 112, 114, 111, 100, 117, 99, 116, 115, 32, 
            100, 101, 114, 105, 118, 101, 100, 32, 102, 114, 111, 109, 10, 32, 116, 104, 105, 115, 32, 115, 
            111, 102, 116, 119, 97, 114, 101, 32, 119, 105, 116, 104, 111, 117, 116, 32, 115, 112, 101, 99, 
            105, 102, 105, 99, 32, 112, 114, 105, 111, 114, 32, 119, 114, 105, 116, 116, 101, 110, 32, 112, 
            101, 114, 109, 105, 115, 115, 105, 111, 110, 46, 10, 10, 32, 84, 72, 73, 83, 32, 83, 79, 
            70, 84, 87, 65, 82, 69, 32, 73, 83, 32, 80, 82, 79, 86, 73, 68, 69, 68, 32, 66, 
            89, 32, 84, 72, 69, 32, 67, 79, 80, 89, 82, 73, 71, 72, 84, 32, 72, 79, 76, 68, 
            69, 82, 83, 32, 65, 78, 68, 32, 67, 79, 78, 84, 82, 73, 66, 85, 84, 79, 82, 83, 
            10, 32, 34, 65, 83, 32, 73, 83, 34, 32, 65, 78, 68, 32, 65, 78, 89, 32, 69, 88, 
            80, 82, 69, 83, 83, 32, 79, 82, 32, 73, 77, 80, 76, 73, 69, 68, 32, 87, 65, 82, 
            82, 65, 78, 84, 73, 69, 83, 44, 32, 73, 78, 67, 76, 85, 68, 73, 78, 71, 44, 32, 
            66, 85, 84, 32, 78, 79, 84, 10, 32, 76, 73, 77, 73, 84, 69, 68, 32, 84, 79, 44, 
            32, 84, 72, 69, 32, 73, 77, 80, 76, 73, 69, 68, 32, 87, 65, 82, 82, 65, 78, 84, 
            73, 69, 83, 32, 79, 70, 32, 77, 69, 82, 67, 72, 65, 78, 84, 65, 66, 73, 76, 73, 
            84, 89, 32, 65, 78, 68, 32, 70, 73, 84, 78, 69, 83, 83, 32, 70, 79, 82, 10, 32, 
            65, 32, 80, 65, 82, 84, 73, 67, 85, 76, 65, 82, 32, 80, 85, 82, 80, 79, 83, 69, 
            32, 65, 82, 69, 32, 68, 73, 83, 67, 76, 65, 73, 77, 69, 68, 46, 32, 73, 78, 32, 
            78, 79, 32, 69, 86, 69, 78, 84, 32, 83, 72, 65, 76, 76, 32, 84, 72, 69, 32, 67, 
            79, 80, 89, 82, 73, 71, 72, 84, 10, 32, 79, 87, 78, 69, 82, 32, 79, 82, 32, 67, 
            79, 78, 84, 82, 73, 66, 85, 84, 79, 82, 83, 32, 66, 69, 32, 76, 73, 65, 66, 76, 
            69, 32, 70, 79, 82, 32, 65, 78, 89, 32, 68, 73, 82, 69, 67, 84, 44, 32, 73, 78, 
            68, 73, 82, 69, 67, 84, 44, 32, 73, 78, 67, 73, 68, 69, 78, 84, 65, 76, 44, 10, 
            32, 83, 80, 69, 67, 73, 65, 76, 44, 32, 69, 88, 69, 77, 80, 76, 65, 82, 89, 44, 
            32, 79, 82, 32, 67, 79, 78, 83, 69, 81, 85, 69, 78, 84, 73, 65, 76, 32, 68, 65, 
            77, 65, 71, 69, 83, 32, 40, 73, 78, 67, 76, 85, 68, 73, 78, 71, 44, 32, 66, 85, 
            84, 32, 78, 79, 84, 10, 32, 76, 73, 77, 73, 84, 69, 68, 32, 84, 79, 44, 32, 80, 
            82, 79, 67, 85, 82, 69, 77, 69, 78, 84, 32, 79, 70, 32, 83, 85, 66, 83, 84, 73, 
            84, 85, 84, 69, 32, 71, 79, 79, 68, 83, 32, 79, 82, 32, 83, 69, 82, 86, 73, 67, 
            69, 83, 59, 32, 76, 79, 83, 83, 32, 79, 70, 32, 85, 83, 69, 44, 10, 32, 68, 65, 
            84, 65, 44, 32, 79, 82, 32, 80, 82, 79, 70, 73, 84, 83, 59, 32, 79, 82, 32, 66, 
            85, 83, 73, 78, 69, 83, 83, 32, 73, 78, 84, 69, 82, 82, 85, 80, 84, 73, 79, 78, 
            41, 32, 72, 79, 87, 69, 86, 69, 82, 32, 67, 65, 85, 83, 69, 68, 32, 65, 78, 68, 
            32, 79, 78, 32, 65, 78, 89, 10, 32, 84, 72, 69, 79, 82, 89, 32, 79, 70, 32, 76, 
            73, 65, 66, 73, 76, 73, 84, 89, 44, 32, 87, 72, 69, 84, 72, 69, 82, 32, 73, 78, 
            32, 67, 79, 78, 84, 82, 65, 67, 84, 44, 32, 83, 84, 82, 73, 67, 84, 32, 76, 73, 
            65, 66, 73, 76, 73, 84, 89, 44, 32, 79, 82, 32, 84, 79, 82, 84, 10, 32, 40, 73, 
            78, 67, 76, 85, 68, 73, 78, 71, 32, 78, 69, 71, 76, 73, 71, 69, 78, 67, 69, 32, 
            79, 82, 32, 79, 84, 72, 69, 82, 87, 73, 83, 69, 41, 32, 65, 82, 73, 83, 73, 78, 
            71, 32, 73, 78, 32, 65, 78, 89, 32, 87, 65, 89, 32, 79, 85, 84, 32, 79, 70, 32, 
            84, 72, 69, 32, 85, 83, 69, 10, 32, 79, 70, 32, 84, 72, 73, 83, 32, 83, 79, 70, 
            84, 87, 65, 82, 69, 44, 32, 69, 86, 69, 78, 32, 73, 70, 32, 65, 68, 86, 73, 83, 
            69, 68, 32, 79, 70, 32, 84, 72, 69, 32, 80, 79, 83, 83, 73, 66, 73, 76, 73, 84, 
            89, 32, 79, 70, 32, 83, 85, 67, 72, 32, 68, 65, 77, 65, 71, 69, 46, 10, 10, 8, 
            10, 1, 2, 18, 3, 32, 8, 23, 10, 9, 10, 2, 3, 0, 18, 3, 34, 7, 45, 10, 
            9, 10, 2, 3, 1, 18, 3, 35, 7, 35, 10, 8, 10, 1, 8, 18, 3, 37, 0, 59, 
            10, 9, 10, 2, 8, 37, 18, 3, 37, 0, 59, 10, 8, 10, 1, 8, 18, 3, 38, 0, 
            44, 10, 9, 10, 2, 8, 1, 18, 3, 38, 0, 44, 10, 8, 10, 1, 8, 18, 3, 39, 
            0, 41, 10, 9, 10, 2, 8, 8, 18, 3, 39, 0, 41, 10, 8, 10, 1, 8, 18, 3, 
            40, 0, 34, 10, 9, 10, 2, 8, 10, 18, 3, 40, 0, 34, 10, 8, 10, 1, 8, 18, 
            3, 41, 0, 33, 10, 9, 10, 2, 8, 36, 18, 3, 41, 0, 33, 10, 8, 10, 1, 8, 
            18, 3, 42, 0, 66, 10, 9, 10, 2, 8, 11, 18, 3, 42, 0, 66, 10, 171, 4, 10, 
            2, 4, 0, 18, 4, 53, 0, 97, 1, 26, 158, 4, 32, 65, 112, 105, 32, 105, 115, 32, 
            97, 32, 108, 105, 103, 104, 116, 45, 119, 101, 105, 103, 104, 116, 32, 100, 101, 115, 99, 114, 
            105, 112, 116, 111, 114, 32, 102, 111, 114, 32, 97, 110, 32, 65, 80, 73, 32, 73, 110, 116, 
            101, 114, 102, 97, 99, 101, 46, 10, 10, 32, 73, 110, 116, 101, 114, 102, 97, 99, 101, 115, 
            32, 97, 114, 101, 32, 97, 108, 115, 111, 32, 100, 101, 115, 99, 114, 105, 98, 101, 100, 32, 
            97, 115, 32, 34, 112, 114, 111, 116, 111, 99, 111, 108, 32, 98, 117, 102, 102, 101, 114, 32, 
            115, 101, 114, 118, 105, 99, 101, 115, 34, 32, 105, 110, 32, 115, 111, 109, 101, 32, 99, 111, 
            110, 116, 101, 120, 116, 115, 44, 10, 32, 115, 117, 99, 104, 32, 97, 115, 32, 98, 121, 32, 
            116, 104, 101, 32, 34, 115, 101, 114, 118, 105, 99, 101, 34, 32, 107, 101, 121, 119, 111, 114, 
            100, 32, 105, 110, 32, 97, 32, 46, 112, 114, 111, 116, 111, 32, 102, 105, 108, 101, 44, 32, 
            98, 117, 116, 32, 116, 104, 101, 121, 32, 97, 114, 101, 32, 100, 105, 102, 102, 101, 114, 101, 
            110, 116, 10, 32, 102, 114, 111, 109, 32, 65, 80, 73, 32, 83, 101, 114, 118, 105, 99, 101, 
            115, 44, 32, 119, 104, 105, 99, 104, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 32, 97, 
            32, 99, 111, 110, 99, 114, 101, 116, 101, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 97, 
            116, 105, 111, 110, 32, 111, 102, 32, 97, 110, 32, 105, 110, 116, 101, 114, 102, 97, 99, 101, 
            10, 32, 97, 115, 32, 111, 112, 112, 111, 115, 101, 100, 32, 116, 111, 32, 115, 105, 109, 112, 
            108, 121, 32, 97, 32, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 32, 111, 102, 32, 
            109, 101, 116, 104, 111, 100, 115, 32, 97, 110, 100, 32, 98, 105, 110, 100, 105, 110, 103, 115, 
            46, 32, 84, 104, 101, 121, 32, 97, 114, 101, 32, 97, 108, 115, 111, 10, 32, 115, 111, 109, 
            101, 116, 105, 109, 101, 115, 32, 115, 105, 109, 112, 108, 121, 32, 114, 101, 102, 101, 114, 114, 
            101, 100, 32, 116, 111, 32, 97, 115, 32, 34, 65, 80, 73, 115, 34, 32, 105, 110, 32, 111, 
            116, 104, 101, 114, 32, 99, 111, 110, 116, 101, 120, 116, 115, 44, 32, 115, 117, 99, 104, 32, 
            97, 115, 32, 116, 104, 101, 32, 110, 97, 109, 101, 32, 111, 102, 10, 32, 116, 104, 105, 115, 
            32, 109, 101, 115, 115, 97, 103, 101, 32, 105, 116, 115, 101, 108, 102, 46, 32, 83, 101, 101, 
            32, 104, 116, 116, 112, 115, 58, 47, 47, 99, 108, 111, 117, 100, 46, 103, 111, 111, 103, 108, 
            101, 46, 99, 111, 109, 47, 97, 112, 105, 115, 47, 100, 101, 115, 105, 103, 110, 47, 103, 108, 
            111, 115, 115, 97, 114, 121, 32, 102, 111, 114, 10, 32, 100, 101, 116, 97, 105, 108, 101, 100, 
            32, 116, 101, 114, 109, 105, 110, 111, 108, 111, 103, 121, 46, 10, 10, 10, 10, 3, 4, 0, 
            1, 18, 3, 53, 8, 11, 10, 123, 10, 4, 4, 0, 2, 0, 18, 3, 57, 2, 18, 26, 
            110, 32, 84, 104, 101, 32, 102, 117, 108, 108, 121, 32, 113, 117, 97, 108, 105, 102, 105, 101, 
            100, 32, 110, 97, 109, 101, 32, 111, 102, 32, 116, 104, 105, 115, 32, 105, 110, 116, 101, 114, 
            102, 97, 99, 101, 44, 32, 105, 110, 99, 108, 117, 100, 105, 110, 103, 32, 112, 97, 99, 107, 
            97, 103, 101, 32, 110, 97, 109, 101, 10, 32, 102, 111, 108, 108, 111, 119, 101, 100, 32, 98, 
            121, 32, 116, 104, 101, 32, 105, 110, 116, 101, 114, 102, 97, 99, 101, 39, 115, 32, 115, 105, 
            109, 112, 108, 101, 32, 110, 97, 109, 101, 46, 10, 10, 13, 10, 5, 4, 0, 2, 0, 4, 
            18, 4, 57, 2, 53, 13, 10, 12, 10, 5, 4, 0, 2, 0, 5, 18, 3, 57, 2, 8, 
            10, 12, 10, 5, 4, 0, 2, 0, 1, 18, 3, 57, 9, 13, 10, 12, 10, 5, 4, 0, 
            2, 0, 3, 18, 3, 57, 16, 17, 10, 67, 10, 4, 4, 0, 2, 1, 18, 3, 60, 2, 
            30, 26, 54, 32, 84, 104, 101, 32, 109, 101, 116, 104, 111, 100, 115, 32, 111, 102, 32, 116, 
            104, 105, 115, 32, 105, 110, 116, 101, 114, 102, 97, 99, 101, 44, 32, 105, 110, 32, 117, 110, 
            115, 112, 101, 99, 105, 102, 105, 101, 100, 32, 111, 114, 100, 101, 114, 46, 10, 10, 12, 10, 
            5, 4, 0, 2, 1, 4, 18, 3, 60, 2, 10, 10, 12, 10, 5, 4, 0, 2, 1, 6, 
            18, 3, 60, 11, 17, 10, 12, 10, 5, 4, 0, 2, 1, 1, 18, 3, 60, 18, 25, 10, 
            12, 10, 5, 4, 0, 2, 1, 3, 18, 3, 60, 28, 29, 10, 54, 10, 4, 4, 0, 2, 
            2, 18, 3, 63, 2, 30, 26, 41, 32, 65, 110, 121, 32, 109, 101, 116, 97, 100, 97, 116, 
            97, 32, 97, 116, 116, 97, 99, 104, 101, 100, 32, 116, 111, 32, 116, 104, 101, 32, 105, 110, 
            116, 101, 114, 102, 97, 99, 101, 46, 10, 10, 12, 10, 5, 4, 0, 2, 2, 4, 18, 3, 
            63, 2, 10, 10, 12, 10, 5, 4, 0, 2, 2, 6, 18, 3, 63, 11, 17, 10, 12, 10, 
            5, 4, 0, 2, 2, 1, 18, 3, 63, 18, 25, 10, 12, 10, 5, 4, 0, 2, 2, 3, 
            18, 3, 63, 28, 29, 10, 130, 8, 10, 4, 4, 0, 2, 3, 18, 3, 86, 2, 21, 26, 
            244, 7, 32, 65, 32, 118, 101, 114, 115, 105, 111, 110, 32, 115, 116, 114, 105, 110, 103, 32, 
            102, 111, 114, 32, 116, 104, 105, 115, 32, 105, 110, 116, 101, 114, 102, 97, 99, 101, 46, 32, 
            73, 102, 32, 115, 112, 101, 99, 105, 102, 105, 101, 100, 44, 32, 109, 117, 115, 116, 32, 104, 
            97, 118, 101, 32, 116, 104, 101, 32, 102, 111, 114, 109, 10, 32, 96, 109, 97, 106, 111, 114, 
            45, 118, 101, 114, 115, 105, 111, 110, 46, 109, 105, 110, 111, 114, 45, 118, 101, 114, 115, 105, 
            111, 110, 96, 44, 32, 97, 115, 32, 105, 110, 32, 96, 49, 46, 49, 48, 96, 46, 32, 73, 
            102, 32, 116, 104, 101, 32, 109, 105, 110, 111, 114, 32, 118, 101, 114, 115, 105, 111, 110, 32, 
            105, 115, 10, 32, 111, 109, 105, 116, 116, 101, 100, 44, 32, 105, 116, 32, 100, 101, 102, 97, 
            117, 108, 116, 115, 32, 116, 111, 32, 122, 101, 114, 111, 46, 32, 73, 102, 32, 116, 104, 101, 
            32, 101, 110, 116, 105, 114, 101, 32, 118, 101, 114, 115, 105, 111, 110, 32, 102, 105, 101, 108, 
            100, 32, 105, 115, 32, 101, 109, 112, 116, 121, 44, 32, 116, 104, 101, 10, 32, 109, 97, 106, 
            111, 114, 32, 118, 101, 114, 115, 105, 111, 110, 32, 105, 115, 32, 100, 101, 114, 105, 118, 101, 
            100, 32, 102, 114, 111, 109, 32, 116, 104, 101, 32, 112, 97, 99, 107, 97, 103, 101, 32, 110, 
            97, 109, 101, 44, 32, 97, 115, 32, 111, 117, 116, 108, 105, 110, 101, 100, 32, 98, 101, 108, 
            111, 119, 46, 32, 73, 102, 32, 116, 104, 101, 10, 32, 102, 105, 101, 108, 100, 32, 105, 115, 
            32, 110, 111, 116, 32, 101, 109, 112, 116, 121, 44, 32, 116, 104, 101, 32, 118, 101, 114, 115, 
            105, 111, 110, 32, 105, 110, 32, 116, 104, 101, 32, 112, 97, 99, 107, 97, 103, 101, 32, 110, 
            97, 109, 101, 32, 119, 105, 108, 108, 32, 98, 101, 32, 118, 101, 114, 105, 102, 105, 101, 100, 
            32, 116, 111, 32, 98, 101, 10, 32, 99, 111, 110, 115, 105, 115, 116, 101, 110, 116, 32, 119, 
            105, 116, 104, 32, 119, 104, 97, 116, 32, 105, 115, 32, 112, 114, 111, 118, 105, 100, 101, 100, 
            32, 104, 101, 114, 101, 46, 10, 10, 32, 84, 104, 101, 32, 118, 101, 114, 115, 105, 111, 110, 
            105, 110, 103, 32, 115, 99, 104, 101, 109, 97, 32, 117, 115, 101, 115, 32, 91, 115, 101, 109, 
            97, 110, 116, 105, 99, 10, 32, 118, 101, 114, 115, 105, 111, 110, 105, 110, 103, 93, 40, 104, 
            116, 116, 112, 58, 47, 47, 115, 101, 109, 118, 101, 114, 46, 111, 114, 103, 41, 32, 119, 104, 
            101, 114, 101, 32, 116, 104, 101, 32, 109, 97, 106, 111, 114, 32, 118, 101, 114, 115, 105, 111, 
            110, 32, 110, 117, 109, 98, 101, 114, 10, 32, 105, 110, 100, 105, 99, 97, 116, 101, 115, 32, 
            97, 32, 98, 114, 101, 97, 107, 105, 110, 103, 32, 99, 104, 97, 110, 103, 101, 32, 97, 110, 
            100, 32, 116, 104, 101, 32, 109, 105, 110, 111, 114, 32, 118, 101, 114, 115, 105, 111, 110, 32, 
            97, 110, 32, 97, 100, 100, 105, 116, 105, 118, 101, 44, 10, 32, 110, 111, 110, 45, 98, 114, 
            101, 97, 107, 105, 110, 103, 32, 99, 104, 97, 110, 103, 101, 46, 32, 66, 111, 116, 104, 32, 
            118, 101, 114, 115, 105, 111, 110, 32, 110, 117, 109, 98, 101, 114, 115, 32, 97, 114, 101, 32, 
            115, 105, 103, 110, 97, 108, 115, 32, 116, 111, 32, 117, 115, 101, 114, 115, 10, 32, 119, 104, 
            97, 116, 32, 116, 111, 32, 101, 120, 112, 101, 99, 116, 32, 102, 114, 111, 109, 32, 100, 105, 
            102, 102, 101, 114, 101, 110, 116, 32, 118, 101, 114, 115, 105, 111, 110, 115, 44, 32, 97, 110, 
            100, 32, 115, 104, 111, 117, 108, 100, 32, 98, 101, 32, 99, 97, 114, 101, 102, 117, 108, 108, 
            121, 10, 32, 99, 104, 111, 115, 101, 110, 32, 98, 97, 115, 101, 100, 32, 111, 110, 32, 116, 
            104, 101, 32, 112, 114, 111, 100, 117, 99, 116, 32, 112, 108, 97, 110, 46, 10, 10, 32, 84, 
            104, 101, 32, 109, 97, 106, 111, 114, 32, 118, 101, 114, 115, 105, 111, 110, 32, 105, 115, 32, 
            97, 108, 115, 111, 32, 114, 101, 102, 108, 101, 99, 116, 101, 100, 32, 105, 110, 32, 116, 104, 
            101, 32, 112, 97, 99, 107, 97, 103, 101, 32, 110, 97, 109, 101, 32, 111, 102, 32, 116, 104, 
            101, 10, 32, 105, 110, 116, 101, 114, 102, 97, 99, 101, 44, 32, 119, 104, 105, 99, 104, 32, 
            109, 117, 115, 116, 32, 101, 110, 100, 32, 105, 110, 32, 96, 118, 60, 109, 97, 106, 111, 114, 
            45, 118, 101, 114, 115, 105, 111, 110, 62, 96, 44, 32, 97, 115, 32, 105, 110, 10, 32, 96, 
            103, 111, 111, 103, 108, 101, 46, 102, 101, 97, 116, 117, 114, 101, 46, 118, 49, 96, 46, 32, 
            70, 111, 114, 32, 109, 97, 106, 111, 114, 32, 118, 101, 114, 115, 105, 111, 110, 115, 32, 48, 
            32, 97, 110, 100, 32, 49, 44, 32, 116, 104, 101, 32, 115, 117, 102, 102, 105, 120, 32, 99, 
            97, 110, 10, 32, 98, 101, 32, 111, 109, 105, 116, 116, 101, 100, 46, 32, 90, 101, 114, 111, 
            32, 109, 97, 106, 111, 114, 32, 118, 101, 114, 115, 105, 111, 110, 115, 32, 109, 117, 115, 116, 
            32, 111, 110, 108, 121, 32, 98, 101, 32, 117, 115, 101, 100, 32, 102, 111, 114, 10, 32, 101, 
            120, 112, 101, 114, 105, 109, 101, 110, 116, 97, 108, 44, 32, 110, 111, 110, 45, 71, 65, 32, 
            105, 110, 116, 101, 114, 102, 97, 99, 101, 115, 46, 10, 10, 10, 10, 13, 10, 5, 4, 0, 
            2, 3, 4, 18, 4, 86, 2, 63, 30, 10, 12, 10, 5, 4, 0, 2, 3, 5, 18, 3, 
            86, 2, 8, 10, 12, 10, 5, 4, 0, 2, 3, 1, 18, 3, 86, 9, 16, 10, 12, 10, 
            5, 4, 0, 2, 3, 3, 18, 3, 86, 19, 20, 10, 91, 10, 4, 4, 0, 2, 4, 18, 
            3, 90, 2, 35, 26, 78, 32, 83, 111, 117, 114, 99, 101, 32, 99, 111, 110, 116, 101, 120, 
            116, 32, 102, 111, 114, 32, 116, 104, 101, 32, 112, 114, 111, 116, 111, 99, 111, 108, 32, 98, 
            117, 102, 102, 101, 114, 32, 115, 101, 114, 118, 105, 99, 101, 32, 114, 101, 112, 114, 101, 115, 
            101, 110, 116, 101, 100, 32, 98, 121, 32, 116, 104, 105, 115, 10, 32, 109, 101, 115, 115, 97, 
            103, 101, 46, 10, 10, 13, 10, 5, 4, 0, 2, 4, 4, 18, 4, 90, 2, 86, 21, 10, 
            12, 10, 5, 4, 0, 2, 4, 6, 18, 3, 90, 2, 15, 10, 12, 10, 5, 4, 0, 2, 
            4, 1, 18, 3, 90, 16, 30, 10, 12, 10, 5, 4, 0, 2, 4, 3, 18, 3, 90, 33, 
            34, 10, 50, 10, 4, 4, 0, 2, 5, 18, 3, 93, 2, 28, 26, 37, 32, 73, 110, 99, 
            108, 117, 100, 101, 100, 32, 105, 110, 116, 101, 114, 102, 97, 99, 101, 115, 46, 32, 83, 101, 
            101, 32, 91, 77, 105, 120, 105, 110, 93, 91, 93, 46, 10, 10, 12, 10, 5, 4, 0, 2, 
            5, 4, 18, 3, 93, 2, 10, 10, 12, 10, 5, 4, 0, 2, 5, 6, 18, 3, 93, 11, 
            16, 10, 12, 10, 5, 4, 0, 2, 5, 1, 18, 3, 93, 17, 23, 10, 12, 10, 5, 4, 
            0, 2, 5, 3, 18, 3, 93, 26, 27, 10, 48, 10, 4, 4, 0, 2, 6, 18, 3, 96, 
            2, 20, 26, 35, 32, 84, 104, 101, 32, 115, 111, 117, 114, 99, 101, 32, 115, 121, 110, 116, 
            97, 120, 32, 111, 102, 32, 116, 104, 101, 32, 115, 101, 114, 118, 105, 99, 101, 46, 10, 10, 
            13, 10, 5, 4, 0, 2, 6, 4, 18, 4, 96, 2, 93, 28, 10, 12, 10, 5, 4, 0, 
            2, 6, 6, 18, 3, 96, 2, 8, 10, 12, 10, 5, 4, 0, 2, 6, 1, 18, 3, 96, 
            9, 15, 10, 12, 10, 5, 4, 0, 2, 6, 3, 18, 3, 96, 18, 19, 10, 61, 10, 2, 
            4, 1, 18, 4, 100, 0, 122, 1, 26, 49, 32, 77, 101, 116, 104, 111, 100, 32, 114, 101, 
            112, 114, 101, 115, 101, 110, 116, 115, 32, 97, 32, 109, 101, 116, 104, 111, 100, 32, 111, 102, 
            32, 97, 110, 32, 65, 80, 73, 32, 105, 110, 116, 101, 114, 102, 97, 99, 101, 46, 10, 10, 
            10, 10, 3, 4, 1, 1, 18, 3, 100, 8, 14, 10, 46, 10, 4, 4, 1, 2, 0, 18, 
            3, 103, 2, 18, 26, 33, 32, 84, 104, 101, 32, 115, 105, 109, 112, 108, 101, 32, 110, 97, 
            109, 101, 32, 111, 102, 32, 116, 104, 105, 115, 32, 109, 101, 116, 104, 111, 100, 46, 10, 10, 
            13, 10, 5, 4, 1, 2, 0, 4, 18, 4, 103, 2, 100, 16, 10, 12, 10, 5, 4, 1, 
            2, 0, 5, 18, 3, 103, 2, 8, 10, 12, 10, 5, 4, 1, 2, 0, 1, 18, 3, 103, 
            9, 13, 10, 12, 10, 5, 4, 1, 2, 0, 3, 18, 3, 103, 16, 17, 10, 47, 10, 4, 
            4, 1, 2, 1, 18, 3, 106, 2, 30, 26, 34, 32, 65, 32, 85, 82, 76, 32, 111, 102, 
            32, 116, 104, 101, 32, 105, 110, 112, 117, 116, 32, 109, 101, 115, 115, 97, 103, 101, 32, 116, 
            121, 112, 101, 46, 10, 10, 13, 10, 5, 4, 1, 2, 1, 4, 18, 4, 106, 2, 103, 18, 
            10, 12, 10, 5, 4, 1, 2, 1, 5, 18, 3, 106, 2, 8, 10, 12, 10, 5, 4, 1, 
            2, 1, 1, 18, 3, 106, 9, 25, 10, 12, 10, 5, 4, 1, 2, 1, 3, 18, 3, 106, 
            28, 29, 10, 48, 10, 4, 4, 1, 2, 2, 18, 3, 109, 2, 29, 26, 35, 32, 73, 102, 
            32, 116, 114, 117, 101, 44, 32, 116, 104, 101, 32, 114, 101, 113, 117, 101, 115, 116, 32, 105, 
            115, 32, 115, 116, 114, 101, 97, 109, 101, 100, 46, 10, 10, 13, 10, 5, 4, 1, 2, 2, 
            4, 18, 4, 109, 2, 106, 30, 10, 12, 10, 5, 4, 1, 2, 2, 5, 18, 3, 109, 2, 
            6, 10, 12, 10, 5, 4, 1, 2, 2, 1, 18, 3, 109, 7, 24, 10, 12, 10, 5, 4, 
            1, 2, 2, 3, 18, 3, 109, 27, 28, 10, 50, 10, 4, 4, 1, 2, 3, 18, 3, 112, 
            2, 31, 26, 37, 32, 84, 104, 101, 32, 85, 82, 76, 32, 111, 102, 32, 116, 104, 101, 32, 
            111, 117, 116, 112, 117, 116, 32, 109, 101, 115, 115, 97, 103, 101, 32, 116, 121, 112, 101, 46, 
            10, 10, 13, 10, 5, 4, 1, 2, 3, 4, 18, 4, 112, 2, 109, 29, 10, 12, 10, 5, 
            4, 1, 2, 3, 5, 18, 3, 112, 2, 8, 10, 12, 10, 5, 4, 1, 2, 3, 1, 18, 
            3, 112, 9, 26, 10, 12, 10, 5, 4, 1, 2, 3, 3, 18, 3, 112, 29, 30, 10, 49, 
            10, 4, 4, 1, 2, 4, 18, 3, 115, 2, 30, 26, 36, 32, 73, 102, 32, 116, 114, 117, 
            101, 44, 32, 116, 104, 101, 32, 114, 101, 115, 112, 111, 110, 115, 101, 32, 105, 115, 32, 115, 
            116, 114, 101, 97, 109, 101, 100, 46, 10, 10, 13, 10, 5, 4, 1, 2, 4, 4, 18, 4, 
            115, 2, 112, 31, 10, 12, 10, 5, 4, 1, 2, 4, 5, 18, 3, 115, 2, 6, 10, 12, 
            10, 5, 4, 1, 2, 4, 1, 18, 3, 115, 7, 25, 10, 12, 10, 5, 4, 1, 2, 4, 
            3, 18, 3, 115, 28, 29, 10, 51, 10, 4, 4, 1, 2, 5, 18, 3, 118, 2, 30, 26, 
            38, 32, 65, 110, 121, 32, 109, 101, 116, 97, 100, 97, 116, 97, 32, 97, 116, 116, 97, 99, 
            104, 101, 100, 32, 116, 111, 32, 116, 104, 101, 32, 109, 101, 116, 104, 111, 100, 46, 10, 10, 
            12, 10, 5, 4, 1, 2, 5, 4, 18, 3, 118, 2, 10, 10, 12, 10, 5, 4, 1, 2, 
            5, 6, 18, 3, 118, 11, 17, 10, 12, 10, 5, 4, 1, 2, 5, 1, 18, 3, 118, 18, 
            25, 10, 12, 10, 5, 4, 1, 2, 5, 3, 18, 3, 118, 28, 29, 10, 48, 10, 4, 4, 
            1, 2, 6, 18, 3, 121, 2, 20, 26, 35, 32, 84, 104, 101, 32, 115, 111, 117, 114, 99, 
            101, 32, 115, 121, 110, 116, 97, 120, 32, 111, 102, 32, 116, 104, 105, 115, 32, 109, 101, 116, 
            104, 111, 100, 46, 10, 10, 13, 10, 5, 4, 1, 2, 6, 4, 18, 4, 121, 2, 118, 30, 
            10, 12, 10, 5, 4, 1, 2, 6, 6, 18, 3, 121, 2, 8, 10, 12, 10, 5, 4, 1, 
            2, 6, 1, 18, 3, 121, 9, 15, 10, 12, 10, 5, 4, 1, 2, 6, 3, 18, 3, 121, 
            18, 19, 10, 201, 19, 10, 2, 4, 2, 18, 6, 202, 1, 0, 209, 1, 1, 26, 186, 19, 
            32, 68, 101, 99, 108, 97, 114, 101, 115, 32, 97, 110, 32, 65, 80, 73, 32, 73, 110, 116, 
            101, 114, 102, 97, 99, 101, 32, 116, 111, 32, 98, 101, 32, 105, 110, 99, 108, 117, 100, 101, 
            100, 32, 105, 110, 32, 116, 104, 105, 115, 32, 105, 110, 116, 101, 114, 102, 97, 99, 101, 46, 
            32, 84, 104, 101, 32, 105, 110, 99, 108, 117, 100, 105, 110, 103, 10, 32, 105, 110, 116, 101, 
            114, 102, 97, 99, 101, 32, 109, 117, 115, 116, 32, 114, 101, 100, 101, 99, 108, 97, 114, 101, 
            32, 97, 108, 108, 32, 116, 104, 101, 32, 109, 101, 116, 104, 111, 100, 115, 32, 102, 114, 111, 
            109, 32, 116, 104, 101, 32, 105, 110, 99, 108, 117, 100, 101, 100, 32, 105, 110, 116, 101, 114, 
            102, 97, 99, 101, 44, 32, 98, 117, 116, 10, 32, 100, 111, 99, 117, 109, 101, 110, 116, 97, 
            116, 105, 111, 110, 32, 97, 110, 100, 32, 111, 112, 116, 105, 111, 110, 115, 32, 97, 114, 101, 
            32, 105, 110, 104, 101, 114, 105, 116, 101, 100, 32, 97, 115, 32, 102, 111, 108, 108, 111, 119, 
            115, 58, 10, 10, 32, 45, 32, 73, 102, 32, 97, 102, 116, 101, 114, 32, 99, 111, 109, 109, 
            101, 110, 116, 32, 97, 110, 100, 32, 119, 104, 105, 116, 101, 115, 112, 97, 99, 101, 32, 115, 
            116, 114, 105, 112, 112, 105, 110, 103, 44, 32, 116, 104, 101, 32, 100, 111, 99, 117, 109, 101, 
            110, 116, 97, 116, 105, 111, 110, 10, 32, 32, 32, 115, 116, 114, 105, 110, 103, 32, 111, 102, 
            32, 116, 104, 101, 32, 114, 101, 100, 101, 99, 108, 97, 114, 101, 100, 32, 109, 101, 116, 104, 
            111, 100, 32, 105, 115, 32, 101, 109, 112, 116, 121, 44, 32, 105, 116, 32, 119, 105, 108, 108, 
            32, 98, 101, 32, 105, 110, 104, 101, 114, 105, 116, 101, 100, 10, 32, 32, 32, 102, 114, 111, 
            109, 32, 116, 104, 101, 32, 111, 114, 105, 103, 105, 110, 97, 108, 32, 109, 101, 116, 104, 111, 
            100, 46, 10, 10, 32, 45, 32, 69, 97, 99, 104, 32, 97, 110, 110, 111, 116, 97, 116, 105, 
            111, 110, 32, 98, 101, 108, 111, 110, 103, 105, 110, 103, 32, 116, 111, 32, 116, 104, 101, 32, 
            115, 101, 114, 118, 105, 99, 101, 32, 99, 111, 110, 102, 105, 103, 32, 40, 104, 116, 116, 112, 
            44, 10, 32, 32, 32, 118, 105, 115, 105, 98, 105, 108, 105, 116, 121, 41, 32, 119, 104, 105, 
            99, 104, 32, 105, 115, 32, 110, 111, 116, 32, 115, 101, 116, 32, 105, 110, 32, 116, 104, 101, 
            32, 114, 101, 100, 101, 99, 108, 97, 114, 101, 100, 32, 109, 101, 116, 104, 111, 100, 32, 119, 
            105, 108, 108, 32, 98, 101, 10, 32, 32, 32, 105, 110, 104, 101, 114, 105, 116, 101, 100, 46, 
            10, 10, 32, 45, 32, 73, 102, 32, 97, 110, 32, 104, 116, 116, 112, 32, 97, 110, 110, 111, 
            116, 97, 116, 105, 111, 110, 32, 105, 115, 32, 105, 110, 104, 101, 114, 105, 116, 101, 100, 44, 
            32, 116, 104, 101, 32, 112, 97, 116, 104, 32, 112, 97, 116, 116, 101, 114, 110, 32, 119, 105, 
            108, 108, 32, 98, 101, 10, 32, 32, 32, 109, 111, 100, 105, 102, 105, 101, 100, 32, 97, 115, 
            32, 102, 111, 108, 108, 111, 119, 115, 46, 32, 65, 110, 121, 32, 118, 101, 114, 115, 105, 111, 
            110, 32, 112, 114, 101, 102, 105, 120, 32, 119, 105, 108, 108, 32, 98, 101, 32, 114, 101, 112, 
            108, 97, 99, 101, 100, 32, 98, 121, 32, 116, 104, 101, 10, 32, 32, 32, 118, 101, 114, 115, 
            105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 32, 105, 110, 99, 108, 117, 100, 105, 110, 103, 
            32, 105, 110, 116, 101, 114, 102, 97, 99, 101, 32, 112, 108, 117, 115, 32, 116, 104, 101, 32, 
            91, 114, 111, 111, 116, 93, 91, 93, 32, 112, 97, 116, 104, 32, 105, 102, 10, 32, 32, 32, 
            115, 112, 101, 99, 105, 102, 105, 101, 100, 46, 10, 10, 32, 69, 120, 97, 109, 112, 108, 101, 
            32, 111, 102, 32, 97, 32, 115, 105, 109, 112, 108, 101, 32, 109, 105, 120, 105, 110, 58, 10, 
            10, 32, 32, 32, 32, 32, 112, 97, 99, 107, 97, 103, 101, 32, 103, 111, 111, 103, 108, 101, 
            46, 97, 99, 108, 46, 118, 49, 59, 10, 32, 32, 32, 32, 32, 115, 101, 114, 118, 105, 99, 
            101, 32, 65, 99, 99, 101, 115, 115, 67, 111, 110, 116, 114, 111, 108, 32, 123, 10, 32, 32, 
            32, 32, 32, 32, 32, 47, 47, 32, 71, 101, 116, 32, 116, 104, 101, 32, 117, 110, 100, 101, 
            114, 108, 121, 105, 110, 103, 32, 65, 67, 76, 32, 111, 98, 106, 101, 99, 116, 46, 10, 32, 
            32, 32, 32, 32, 32, 32, 114, 112, 99, 32, 71, 101, 116, 65, 99, 108, 40, 71, 101, 116, 
            65, 99, 108, 82, 101, 113, 117, 101, 115, 116, 41, 32, 114, 101, 116, 117, 114, 110, 115, 32, 
            40, 65, 99, 108, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 111, 112, 116, 
            105, 111, 110, 32, 40, 103, 111, 111, 103, 108, 101, 46, 97, 112, 105, 46, 104, 116, 116, 112, 
            41, 46, 103, 101, 116, 32, 61, 32, 34, 47, 118, 49, 47, 123, 114, 101, 115, 111, 117, 114, 
            99, 101, 61, 42, 42, 125, 58, 103, 101, 116, 65, 99, 108, 34, 59, 10, 32, 32, 32, 32, 
            32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 125, 10, 10, 32, 32, 32, 32, 32, 112, 97, 
            99, 107, 97, 103, 101, 32, 103, 111, 111, 103, 108, 101, 46, 115, 116, 111, 114, 97, 103, 101, 
            46, 118, 50, 59, 10, 32, 32, 32, 32, 32, 115, 101, 114, 118, 105, 99, 101, 32, 83, 116, 
            111, 114, 97, 103, 101, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 114, 112, 99, 32, 71, 
            101, 116, 65, 99, 108, 40, 71, 101, 116, 65, 99, 108, 82, 101, 113, 117, 101, 115, 116, 41, 
            32, 114, 101, 116, 117, 114, 110, 115, 32, 40, 65, 99, 108, 41, 59, 10, 10, 32, 32, 32, 
            32, 32, 32, 32, 47, 47, 32, 71, 101, 116, 32, 97, 32, 100, 97, 116, 97, 32, 114, 101, 
            99, 111, 114, 100, 46, 10, 32, 32, 32, 32, 32, 32, 32, 114, 112, 99, 32, 71, 101, 116, 
            68, 97, 116, 97, 40, 71, 101, 116, 68, 97, 116, 97, 82, 101, 113, 117, 101, 115, 116, 41, 
            32, 114, 101, 116, 117, 114, 110, 115, 32, 40, 68, 97, 116, 97, 41, 32, 123, 10, 32, 32, 
            32, 32, 32, 32, 32, 32, 32, 111, 112, 116, 105, 111, 110, 32, 40, 103, 111, 111, 103, 108, 
            101, 46, 97, 112, 105, 46, 104, 116, 116, 112, 41, 46, 103, 101, 116, 32, 61, 32, 34, 47, 
            118, 50, 47, 123, 114, 101, 115, 111, 117, 114, 99, 101, 61, 42, 42, 125, 34, 59, 10, 32, 
            32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 125, 10, 10, 32, 69, 120, 97, 
            109, 112, 108, 101, 32, 111, 102, 32, 97, 32, 109, 105, 120, 105, 110, 32, 99, 111, 110, 102, 
            105, 103, 117, 114, 97, 116, 105, 111, 110, 58, 10, 10, 32, 32, 32, 32, 32, 97, 112, 105, 
            115, 58, 10, 32, 32, 32, 32, 32, 45, 32, 110, 97, 109, 101, 58, 32, 103, 111, 111, 103, 
            108, 101, 46, 115, 116, 111, 114, 97, 103, 101, 46, 118, 50, 46, 83, 116, 111, 114, 97, 103, 
            101, 10, 32, 32, 32, 32, 32, 32, 32, 109, 105, 120, 105, 110, 115, 58, 10, 32, 32, 32, 
            32, 32, 32, 32, 45, 32, 110, 97, 109, 101, 58, 32, 103, 111, 111, 103, 108, 101, 46, 97, 
            99, 108, 46, 118, 49, 46, 65, 99, 99, 101, 115, 115, 67, 111, 110, 116, 114, 111, 108, 10, 
            10, 32, 84, 104, 101, 32, 109, 105, 120, 105, 110, 32, 99, 111, 110, 115, 116, 114, 117, 99, 
            116, 32, 105, 109, 112, 108, 105, 101, 115, 32, 116, 104, 97, 116, 32, 97, 108, 108, 32, 109, 
            101, 116, 104, 111, 100, 115, 32, 105, 110, 32, 96, 65, 99, 99, 101, 115, 115, 67, 111, 110, 
            116, 114, 111, 108, 96, 32, 97, 114, 101, 10, 32, 97, 108, 115, 111, 32, 100, 101, 99, 108, 
            97, 114, 101, 100, 32, 119, 105, 116, 104, 32, 115, 97, 109, 101, 32, 110, 97, 109, 101, 32, 
            97, 110, 100, 32, 114, 101, 113, 117, 101, 115, 116, 47, 114, 101, 115, 112, 111, 110, 115, 101, 
            32, 116, 121, 112, 101, 115, 32, 105, 110, 10, 32, 96, 83, 116, 111, 114, 97, 103, 101, 96, 
            46, 32, 65, 32, 100, 111, 99, 117, 109, 101, 110, 116, 97, 116, 105, 111, 110, 32, 103, 101, 
            110, 101, 114, 97, 116, 111, 114, 32, 111, 114, 32, 97, 110, 110, 111, 116, 97, 116, 105, 111, 
            110, 32, 112, 114, 111, 99, 101, 115, 115, 111, 114, 32, 119, 105, 108, 108, 10, 32, 115, 101, 
            101, 32, 116, 104, 101, 32, 101, 102, 102, 101, 99, 116, 105, 118, 101, 32, 96, 83, 116, 111, 
            114, 97, 103, 101, 46, 71, 101, 116, 65, 99, 108, 96, 32, 109, 101, 116, 104, 111, 100, 32, 
            97, 102, 116, 101, 114, 32, 105, 110, 104, 101, 114, 116, 105, 110, 103, 10, 32, 100, 111, 99, 
            117, 109, 101, 110, 116, 97, 116, 105, 111, 110, 32, 97, 110, 100, 32, 97, 110, 110, 111, 116, 
            97, 116, 105, 111, 110, 115, 32, 97, 115, 32, 102, 111, 108, 108, 111, 119, 115, 58, 10, 10, 
            32, 32, 32, 32, 32, 115, 101, 114, 118, 105, 99, 101, 32, 83, 116, 111, 114, 97, 103, 101, 
            32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 47, 47, 32, 71, 101, 116, 32, 116, 104, 101, 
            32, 117, 110, 100, 101, 114, 108, 121, 105, 110, 103, 32, 65, 67, 76, 32, 111, 98, 106, 101, 
            99, 116, 46, 10, 32, 32, 32, 32, 32, 32, 32, 114, 112, 99, 32, 71, 101, 116, 65, 99, 
            108, 40, 71, 101, 116, 65, 99, 108, 82, 101, 113, 117, 101, 115, 116, 41, 32, 114, 101, 116, 
            117, 114, 110, 115, 32, 40, 65, 99, 108, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 
            32, 32, 111, 112, 116, 105, 111, 110, 32, 40, 103, 111, 111, 103, 108, 101, 46, 97, 112, 105, 
            46, 104, 116, 116, 112, 41, 46, 103, 101, 116, 32, 61, 32, 34, 47, 118, 50, 47, 123, 114, 
            101, 115, 111, 117, 114, 99, 101, 61, 42, 42, 125, 58, 103, 101, 116, 65, 99, 108, 34, 59, 
            10, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 46, 46, 46, 
            10, 32, 32, 32, 32, 32, 125, 10, 10, 32, 78, 111, 116, 101, 32, 104, 111, 119, 32, 116, 
            104, 101, 32, 118, 101, 114, 115, 105, 111, 110, 32, 105, 110, 32, 116, 104, 101, 32, 112, 97, 
            116, 104, 32, 112, 97, 116, 116, 101, 114, 110, 32, 99, 104, 97, 110, 103, 101, 100, 32, 102, 
            114, 111, 109, 32, 96, 118, 49, 96, 32, 116, 111, 32, 96, 118, 50, 96, 46, 10, 10, 32, 
            73, 102, 32, 116, 104, 101, 32, 96, 114, 111, 111, 116, 96, 32, 102, 105, 101, 108, 100, 32, 
            105, 110, 32, 116, 104, 101, 32, 109, 105, 120, 105, 110, 32, 105, 115, 32, 115, 112, 101, 99, 
            105, 102, 105, 101, 100, 44, 32, 105, 116, 32, 115, 104, 111, 117, 108, 100, 32, 98, 101, 32, 
            97, 10, 32, 114, 101, 108, 97, 116, 105, 118, 101, 32, 112, 97, 116, 104, 32, 117, 110, 100, 
            101, 114, 32, 119, 104, 105, 99, 104, 32, 105, 110, 104, 101, 114, 105, 116, 101, 100, 32, 72, 
            84, 84, 80, 32, 112, 97, 116, 104, 115, 32, 97, 114, 101, 32, 112, 108, 97, 99, 101, 100, 
            46, 32, 69, 120, 97, 109, 112, 108, 101, 58, 10, 10, 32, 32, 32, 32, 32, 97, 112, 105, 
            115, 58, 10, 32, 32, 32, 32, 32, 45, 32, 110, 97, 109, 101, 58, 32, 103, 111, 111, 103, 
            108, 101, 46, 115, 116, 111, 114, 97, 103, 101, 46, 118, 50, 46, 83, 116, 111, 114, 97, 103, 
            101, 10, 32, 32, 32, 32, 32, 32, 32, 109, 105, 120, 105, 110, 115, 58, 10, 32, 32, 32, 
            32, 32, 32, 32, 45, 32, 110, 97, 109, 101, 58, 32, 103, 111, 111, 103, 108, 101, 46, 97, 
            99, 108, 46, 118, 49, 46, 65, 99, 99, 101, 115, 115, 67, 111, 110, 116, 114, 111, 108, 10, 
            32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 111, 111, 116, 58, 32, 97, 99, 108, 115, 10, 
            10, 32, 84, 104, 105, 115, 32, 105, 109, 112, 108, 105, 101, 115, 32, 116, 104, 101, 32, 102, 
            111, 108, 108, 111, 119, 105, 110, 103, 32, 105, 110, 104, 101, 114, 105, 116, 101, 100, 32, 72, 
            84, 84, 80, 32, 97, 110, 110, 111, 116, 97, 116, 105, 111, 110, 58, 10, 10, 32, 32, 32, 
            32, 32, 115, 101, 114, 118, 105, 99, 101, 32, 83, 116, 111, 114, 97, 103, 101, 32, 123, 10, 
            32, 32, 32, 32, 32, 32, 32, 47, 47, 32, 71, 101, 116, 32, 116, 104, 101, 32, 117, 110, 
            100, 101, 114, 108, 121, 105, 110, 103, 32, 65, 67, 76, 32, 111, 98, 106, 101, 99, 116, 46, 
            10, 32, 32, 32, 32, 32, 32, 32, 114, 112, 99, 32, 71, 101, 116, 65, 99, 108, 40, 71, 
            101, 116, 65, 99, 108, 82, 101, 113, 117, 101, 115, 116, 41, 32, 114, 101, 116, 117, 114, 110, 
            115, 32, 40, 65, 99, 108, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 111, 
            112, 116, 105, 111, 110, 32, 40, 103, 111, 111, 103, 108, 101, 46, 97, 112, 105, 46, 104, 116, 
            116, 112, 41, 46, 103, 101, 116, 32, 61, 32, 34, 47, 118, 50, 47, 97, 99, 108, 115, 47, 
            123, 114, 101, 115, 111, 117, 114, 99, 101, 61, 42, 42, 125, 58, 103, 101, 116, 65, 99, 108, 
            34, 59, 10, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 32, 46, 
            46, 46, 10, 32, 32, 32, 32, 32, 125, 10, 10, 11, 10, 3, 4, 2, 1, 18, 4, 202, 
            1, 8, 13, 10, 76, 10, 4, 4, 2, 2, 0, 18, 4, 204, 1, 2, 18, 26, 62, 32, 
            84, 104, 101, 32, 102, 117, 108, 108, 121, 32, 113, 117, 97, 108, 105, 102, 105, 101, 100, 32, 
            110, 97, 109, 101, 32, 111, 102, 32, 116, 104, 101, 32, 105, 110, 116, 101, 114, 102, 97, 99, 
            101, 32, 119, 104, 105, 99, 104, 32, 105, 115, 32, 105, 110, 99, 108, 117, 100, 101, 100, 46, 
            10, 10, 15, 10, 5, 4, 2, 2, 0, 4, 18, 6, 204, 1, 2, 202, 1, 15, 10, 13, 
            10, 5, 4, 2, 2, 0, 5, 18, 4, 204, 1, 2, 8, 10, 13, 10, 5, 4, 2, 2, 
            0, 1, 18, 4, 204, 1, 9, 13, 10, 13, 10, 5, 4, 2, 2, 0, 3, 18, 4, 204, 
            1, 16, 17, 10, 91, 10, 4, 4, 2, 2, 1, 18, 4, 208, 1, 2, 18, 26, 77, 32, 
            73, 102, 32, 110, 111, 110, 45, 101, 109, 112, 116, 121, 32, 115, 112, 101, 99, 105, 102, 105, 
            101, 115, 32, 97, 32, 112, 97, 116, 104, 32, 117, 110, 100, 101, 114, 32, 119, 104, 105, 99, 
            104, 32, 105, 110, 104, 101, 114, 105, 116, 101, 100, 32, 72, 84, 84, 80, 32, 112, 97, 116, 
            104, 115, 10, 32, 97, 114, 101, 32, 114, 111, 111, 116, 101, 100, 46, 10, 10, 15, 10, 5, 
            4, 2, 2, 1, 4, 18, 6, 208, 1, 2, 204, 1, 18, 10, 13, 10, 5, 4, 2, 2, 
            1, 5, 18, 4, 208, 1, 2, 8, 10, 13, 10, 5, 4, 2, 2, 1, 1, 18, 4, 208, 
            1, 9, 13, 10, 13, 10, 5, 4, 2, 2, 1, 3, 18, 4, 208, 1, 16, 17, 98, 6, 
            112, 114, 111, 116, 111, 51, 
        ].as_ref()).expect("Could not read file descriptor")]);
        FILE_DEPS = ::std::option::Option::Some([crate::wkt::source_context::pool(), crate::wkt::r#type::pool(), ]);
        FILE_POOL = ::std::option::Option::Some(crate::reflect::DescriptorPool::build_generated_pool(
            FILE_PROTO.as_ref().unwrap(),
            FILE_DEPS.as_ref().unwrap()
        ));
        FILE_DESCRIPTOR = ::std::option::Option::Some(FILE_POOL.as_ref().unwrap().find_file_by_name("google/protobuf/api.proto").unwrap());
    }
}

pub fn pool() -> &'static crate::reflect::DescriptorPool<'static> {
    unsafe {
        FILE_ONCE.call_once(file_once_init);
        FILE_POOL.as_ref().unwrap()
    }
}
pub fn file() -> &'static crate::reflect::FileDescriptor {
    unsafe {
        FILE_ONCE.call_once(file_once_init);
        FILE_DESCRIPTOR.as_ref().unwrap()
    }
}
#[derive(Debug, PartialEq)]
pub struct Api {
    pub name: ::std::string::String,
    pub methods: crate::collections::RepeatedField<self::Method>,
    pub options: crate::collections::RepeatedField<crate::wkt::r#type::Option>,
    pub version: ::std::string::String,
    pub source_context: ::std::option::Option<::std::boxed::Box<crate::wkt::source_context::SourceContext>>,
    pub mixins: crate::collections::RepeatedField<self::Mixin>,
    pub syntax: crate::EnumValue<crate::wkt::r#type::Syntax>,
    unknown_fields: crate::UnknownFieldSet
}
static API_METHODS_CODEC: crate::Codec<self::Method> = crate::Codec::message(18);
static API_OPTIONS_CODEC: crate::Codec<crate::wkt::r#type::Option> = crate::Codec::message(26);
static API_MIXINS_CODEC: crate::Codec<self::Mixin> = crate::Codec::message(50);
impl crate::CodedMessage for self::Api {
    fn merge_from(&mut self, input: &mut crate::io::CodedInput) -> crate::io::InputResult<()> {
        while let ::std::option::Option::Some(tag) = input.read_tag()? {
            match tag.get() {
                10 => self.name = input.read_string()?,
                18 => self.methods.add_entries(tag.get(), input, &API_METHODS_CODEC)?,
                26 => self.options.add_entries(tag.get(), input, &API_OPTIONS_CODEC)?,
                34 => self.version = input.read_string()?,
                42 => input.read_message(self.source_context.get_or_insert_with(crate::LiteMessage::new))?,
                50 => self.mixins.add_entries(tag.get(), input, &API_MIXINS_CODEC)?,
                56 => self.syntax = input.read_enum_value()?,
                tag => self.unknown_fields.merge_from(tag, input)?
            }
        }
        ::std::result::Result::Ok(())
    }
    fn calculate_size(&self) -> i32 {
        let mut size = 0i32;
        let name = &self.name;
        if name != Self::NAME_DEFAULT_VALUE {
            size += 1;
            size += crate::io::sizes::string(name);
        }
        size += self.methods.calculate_size(&API_METHODS_CODEC);
        size += self.options.calculate_size(&API_OPTIONS_CODEC);
        let version = &self.version;
        if version != Self::VERSION_DEFAULT_VALUE {
            size += 1;
            size += crate::io::sizes::string(version);
        }
        let source_context = &self.source_context;
        if let ::std::option::Option::Some(source_context) = source_context {
            size += 1;
            size += crate::io::sizes::message(source_context);
        }
        size += self.mixins.calculate_size(&API_MIXINS_CODEC);
        let syntax = self.syntax;
        if syntax != Self::SYNTAX_DEFAULT_VALUE {
            size += 1;
            size += crate::io::sizes::enum_value(syntax);
        }
        size += self.unknown_fields.calculate_size();
        size
    }
    fn write_to(&self, output: &mut crate::io::CodedOutput) -> crate::io::OutputResult {
        let name = &self.name;
        if name != Self::NAME_DEFAULT_VALUE {
            output.write_raw_tag_bytes(&[10])?;
            output.write_string(name)?;
        }
        self.methods.write_to(output, &API_METHODS_CODEC)?;
        self.options.write_to(output, &API_OPTIONS_CODEC)?;
        let version = &self.version;
        if version != Self::VERSION_DEFAULT_VALUE {
            output.write_raw_tag_bytes(&[34])?;
            output.write_string(version)?;
        }
        let source_context = &self.source_context;
        if let ::std::option::Option::Some(source_context) = source_context {
            output.write_raw_tag_bytes(&[42])?;
            output.write_message(source_context)?;
        }
        self.mixins.write_to(output, &API_MIXINS_CODEC)?;
        let syntax = self.syntax;
        if syntax != Self::SYNTAX_DEFAULT_VALUE {
            output.write_raw_tag_bytes(&[56])?;
            output.write_enum_value(syntax)?;
        }
        self.unknown_fields.write_to(output)?;
        ::std::result::Result::Ok(())
    }
}
impl crate::LiteMessage for self::Api {
    fn new() -> Self {
        Self {
            name: ::std::string::String::new(),
            methods: crate::collections::RepeatedField::new(),
            options: crate::collections::RepeatedField::new(),
            version: ::std::string::String::new(),
            source_context: ::std::option::Option::None,
            mixins: crate::collections::RepeatedField::new(),
            syntax: Self::SYNTAX_DEFAULT_VALUE,
            unknown_fields: crate::UnknownFieldSet::new()
        }
    }
}
impl ::std::clone::Clone for self::Api {
    fn clone(&self) -> Self {
        Self {
            name: self.name.clone(),
            methods: self.methods.clone(),
            options: self.options.clone(),
            version: self.version.clone(),
            source_context: self.source_context.clone(),
            mixins: self.mixins.clone(),
            syntax: self.syntax.clone(),
            unknown_fields: self.unknown_fields.clone()
        }
    }
    fn clone_from(&mut self, other: &Self) {
        self.name = other.name.clone();
        self.methods.clone_from(&other.methods);
        self.options.clone_from(&other.options);
        self.version = other.version.clone();
        if let ::std::option::Option::Some(source_context) = &other.source_context {
            self.source_context.get_or_insert_with(crate::LiteMessage::new).clone_from(source_context);
        }
        self.mixins.clone_from(&other.mixins);
        self.syntax = other.syntax;
        self.unknown_fields.clone_from(&other.unknown_fields);
    }
}
impl crate::Message for self::Api {
    fn descriptor() -> &'static crate::reflect::MessageDescriptor {
        &self::file().messages()[0]
    }
}
impl self::Api {
    /// Gets the field number of the 'name' field
    pub const NAME_FIELD_NUMBER: i32 = 1;
    pub const NAME_DEFAULT_VALUE: &'static str = "";
    /// Gets the field number of the 'methods' field
    pub const METHODS_FIELD_NUMBER: i32 = 2;
    /// Gets the field number of the 'options' field
    pub const OPTIONS_FIELD_NUMBER: i32 = 3;
    /// Gets the field number of the 'version' field
    pub const VERSION_FIELD_NUMBER: i32 = 4;
    pub const VERSION_DEFAULT_VALUE: &'static str = "";
    /// Gets the field number of the 'source_context' field
    pub const SOURCE_CONTEXT_FIELD_NUMBER: i32 = 5;
    /// Gets the field number of the 'mixins' field
    pub const MIXINS_FIELD_NUMBER: i32 = 6;
    /// Gets the field number of the 'syntax' field
    pub const SYNTAX_FIELD_NUMBER: i32 = 7;
    pub const SYNTAX_DEFAULT_VALUE: crate::EnumValue<crate::wkt::r#type::Syntax> = crate::EnumValue::Defined(crate::wkt::r#type::Syntax::Proto2);
}
#[derive(Debug, PartialEq)]
pub struct Method {
    pub name: ::std::string::String,
    pub request_type_url: ::std::string::String,
    pub request_streaming: bool,
    pub response_type_url: ::std::string::String,
    pub response_streaming: bool,
    pub options: crate::collections::RepeatedField<crate::wkt::r#type::Option>,
    pub syntax: crate::EnumValue<crate::wkt::r#type::Syntax>,
    unknown_fields: crate::UnknownFieldSet
}
static METHOD_OPTIONS_CODEC: crate::Codec<crate::wkt::r#type::Option> = crate::Codec::message(50);
impl crate::CodedMessage for self::Method {
    fn merge_from(&mut self, input: &mut crate::io::CodedInput) -> crate::io::InputResult<()> {
        while let ::std::option::Option::Some(tag) = input.read_tag()? {
            match tag.get() {
                10 => self.name = input.read_string()?,
                18 => self.request_type_url = input.read_string()?,
                24 => self.request_streaming = input.read_bool()?,
                34 => self.response_type_url = input.read_string()?,
                40 => self.response_streaming = input.read_bool()?,
                50 => self.options.add_entries(tag.get(), input, &METHOD_OPTIONS_CODEC)?,
                56 => self.syntax = input.read_enum_value()?,
                tag => self.unknown_fields.merge_from(tag, input)?
            }
        }
        ::std::result::Result::Ok(())
    }
    fn calculate_size(&self) -> i32 {
        let mut size = 0i32;
        let name = &self.name;
        if name != Self::NAME_DEFAULT_VALUE {
            size += 1;
            size += crate::io::sizes::string(name);
        }
        let request_type_url = &self.request_type_url;
        if request_type_url != Self::REQUEST_TYPE_URL_DEFAULT_VALUE {
            size += 1;
            size += crate::io::sizes::string(request_type_url);
        }
        let request_streaming = self.request_streaming;
        if request_streaming != Self::REQUEST_STREAMING_DEFAULT_VALUE {
            size += 1;
            size += crate::io::sizes::bool(request_streaming);
        }
        let response_type_url = &self.response_type_url;
        if response_type_url != Self::RESPONSE_TYPE_URL_DEFAULT_VALUE {
            size += 1;
            size += crate::io::sizes::string(response_type_url);
        }
        let response_streaming = self.response_streaming;
        if response_streaming != Self::RESPONSE_STREAMING_DEFAULT_VALUE {
            size += 1;
            size += crate::io::sizes::bool(response_streaming);
        }
        size += self.options.calculate_size(&METHOD_OPTIONS_CODEC);
        let syntax = self.syntax;
        if syntax != Self::SYNTAX_DEFAULT_VALUE {
            size += 1;
            size += crate::io::sizes::enum_value(syntax);
        }
        size += self.unknown_fields.calculate_size();
        size
    }
    fn write_to(&self, output: &mut crate::io::CodedOutput) -> crate::io::OutputResult {
        let name = &self.name;
        if name != Self::NAME_DEFAULT_VALUE {
            output.write_raw_tag_bytes(&[10])?;
            output.write_string(name)?;
        }
        let request_type_url = &self.request_type_url;
        if request_type_url != Self::REQUEST_TYPE_URL_DEFAULT_VALUE {
            output.write_raw_tag_bytes(&[18])?;
            output.write_string(request_type_url)?;
        }
        let request_streaming = self.request_streaming;
        if request_streaming != Self::REQUEST_STREAMING_DEFAULT_VALUE {
            output.write_raw_tag_bytes(&[24])?;
            output.write_bool(request_streaming)?;
        }
        let response_type_url = &self.response_type_url;
        if response_type_url != Self::RESPONSE_TYPE_URL_DEFAULT_VALUE {
            output.write_raw_tag_bytes(&[34])?;
            output.write_string(response_type_url)?;
        }
        let response_streaming = self.response_streaming;
        if response_streaming != Self::RESPONSE_STREAMING_DEFAULT_VALUE {
            output.write_raw_tag_bytes(&[40])?;
            output.write_bool(response_streaming)?;
        }
        self.options.write_to(output, &METHOD_OPTIONS_CODEC)?;
        let syntax = self.syntax;
        if syntax != Self::SYNTAX_DEFAULT_VALUE {
            output.write_raw_tag_bytes(&[56])?;
            output.write_enum_value(syntax)?;
        }
        self.unknown_fields.write_to(output)?;
        ::std::result::Result::Ok(())
    }
}
impl crate::LiteMessage for self::Method {
    fn new() -> Self {
        Self {
            name: ::std::string::String::new(),
            request_type_url: ::std::string::String::new(),
            request_streaming: Self::REQUEST_STREAMING_DEFAULT_VALUE,
            response_type_url: ::std::string::String::new(),
            response_streaming: Self::RESPONSE_STREAMING_DEFAULT_VALUE,
            options: crate::collections::RepeatedField::new(),
            syntax: Self::SYNTAX_DEFAULT_VALUE,
            unknown_fields: crate::UnknownFieldSet::new()
        }
    }
}
impl ::std::clone::Clone for self::Method {
    fn clone(&self) -> Self {
        Self {
            name: self.name.clone(),
            request_type_url: self.request_type_url.clone(),
            request_streaming: self.request_streaming.clone(),
            response_type_url: self.response_type_url.clone(),
            response_streaming: self.response_streaming.clone(),
            options: self.options.clone(),
            syntax: self.syntax.clone(),
            unknown_fields: self.unknown_fields.clone()
        }
    }
    fn clone_from(&mut self, other: &Self) {
        self.name = other.name.clone();
        self.request_type_url = other.request_type_url.clone();
        self.request_streaming = other.request_streaming;
        self.response_type_url = other.response_type_url.clone();
        self.response_streaming = other.response_streaming;
        self.options.clone_from(&other.options);
        self.syntax = other.syntax;
        self.unknown_fields.clone_from(&other.unknown_fields);
    }
}
impl crate::Message for self::Method {
    fn descriptor() -> &'static crate::reflect::MessageDescriptor {
        &self::file().messages()[1]
    }
}
impl self::Method {
    /// Gets the field number of the 'name' field
    pub const NAME_FIELD_NUMBER: i32 = 1;
    pub const NAME_DEFAULT_VALUE: &'static str = "";
    /// Gets the field number of the 'request_type_url' field
    pub const REQUEST_TYPE_URL_FIELD_NUMBER: i32 = 2;
    pub const REQUEST_TYPE_URL_DEFAULT_VALUE: &'static str = "";
    /// Gets the field number of the 'request_streaming' field
    pub const REQUEST_STREAMING_FIELD_NUMBER: i32 = 3;
    pub const REQUEST_STREAMING_DEFAULT_VALUE: bool = false;
    /// Gets the field number of the 'response_type_url' field
    pub const RESPONSE_TYPE_URL_FIELD_NUMBER: i32 = 4;
    pub const RESPONSE_TYPE_URL_DEFAULT_VALUE: &'static str = "";
    /// Gets the field number of the 'response_streaming' field
    pub const RESPONSE_STREAMING_FIELD_NUMBER: i32 = 5;
    pub const RESPONSE_STREAMING_DEFAULT_VALUE: bool = false;
    /// Gets the field number of the 'options' field
    pub const OPTIONS_FIELD_NUMBER: i32 = 6;
    /// Gets the field number of the 'syntax' field
    pub const SYNTAX_FIELD_NUMBER: i32 = 7;
    pub const SYNTAX_DEFAULT_VALUE: crate::EnumValue<crate::wkt::r#type::Syntax> = crate::EnumValue::Defined(crate::wkt::r#type::Syntax::Proto2);
}
#[derive(Debug, PartialEq)]
pub struct Mixin {
    pub name: ::std::string::String,
    pub root: ::std::string::String,
    unknown_fields: crate::UnknownFieldSet
}
impl crate::CodedMessage for self::Mixin {
    fn merge_from(&mut self, input: &mut crate::io::CodedInput) -> crate::io::InputResult<()> {
        while let ::std::option::Option::Some(tag) = input.read_tag()? {
            match tag.get() {
                10 => self.name = input.read_string()?,
                18 => self.root = input.read_string()?,
                tag => self.unknown_fields.merge_from(tag, input)?
            }
        }
        ::std::result::Result::Ok(())
    }
    fn calculate_size(&self) -> i32 {
        let mut size = 0i32;
        let name = &self.name;
        if name != Self::NAME_DEFAULT_VALUE {
            size += 1;
            size += crate::io::sizes::string(name);
        }
        let root = &self.root;
        if root != Self::ROOT_DEFAULT_VALUE {
            size += 1;
            size += crate::io::sizes::string(root);
        }
        size += self.unknown_fields.calculate_size();
        size
    }
    fn write_to(&self, output: &mut crate::io::CodedOutput) -> crate::io::OutputResult {
        let name = &self.name;
        if name != Self::NAME_DEFAULT_VALUE {
            output.write_raw_tag_bytes(&[10])?;
            output.write_string(name)?;
        }
        let root = &self.root;
        if root != Self::ROOT_DEFAULT_VALUE {
            output.write_raw_tag_bytes(&[18])?;
            output.write_string(root)?;
        }
        self.unknown_fields.write_to(output)?;
        ::std::result::Result::Ok(())
    }
}
impl crate::LiteMessage for self::Mixin {
    fn new() -> Self {
        Self {
            name: ::std::string::String::new(),
            root: ::std::string::String::new(),
            unknown_fields: crate::UnknownFieldSet::new()
        }
    }
}
impl ::std::clone::Clone for self::Mixin {
    fn clone(&self) -> Self {
        Self {
            name: self.name.clone(),
            root: self.root.clone(),
            unknown_fields: self.unknown_fields.clone()
        }
    }
    fn clone_from(&mut self, other: &Self) {
        self.name = other.name.clone();
        self.root = other.root.clone();
        self.unknown_fields.clone_from(&other.unknown_fields);
    }
}
impl crate::Message for self::Mixin {
    fn descriptor() -> &'static crate::reflect::MessageDescriptor {
        &self::file().messages()[2]
    }
}
impl self::Mixin {
    /// Gets the field number of the 'name' field
    pub const NAME_FIELD_NUMBER: i32 = 1;
    pub const NAME_DEFAULT_VALUE: &'static str = "";
    /// Gets the field number of the 'root' field
    pub const ROOT_FIELD_NUMBER: i32 = 2;
    pub const ROOT_DEFAULT_VALUE: &'static str = "";
}